app:
  image:
    registry: docker.io
    repository: #
    tag: latest
    pullPolicy: Always
    pullSecret: image-secret-helm
    containerPort: 4200
  readinessProbe:
    enabled: true
    path: /api/health
  livenessProbe:
    enabled: true
    path: /api/health

volumeMounts:
  enabled: true
  volumes:
    - name: env-volume
      type: configMap
      mountPath: /app/dist/app/browser/assets/env/
      spec: 
        name: env-from-file
        asEnvVar: ENV_FROM_FILE # Optional
        fileName: config.json
        value: |
          {
            "hello": "world"
          }

service:
  ports:
    - name: angular
      port: 8080
      targetPort: 4200
      protocol: TCP

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/upstream-vhost: myabc-svc.myabc-ns.svc.cluster.local
  paths:
    - path: /
      backend:
        servicePort: 8080
  http:
    domainName: example.com
  tls: 
    cert:
      path: certificate
      fileName: "*"
    hosts:
      - domainName:
          - example.com
  
ConfigMap:
  enabled: true
  data:
    - name: NODE_ENV
      value: "dynamic"
    - name: PRODUCTION
      value: false
    - name: USEMOCK
      value: false
    - name: AUTH_METHOD
      value: "saml"
    - name: AF_API_INTERNAL_URL
      value: "http://myabc-app:8080"
    - name: AF_PORTAL_URL
      value: "https://example.com"
    - name: LOG_LEVEL
      value: "debug"

# key Vault for public cloud provider
keyVault:
  enabled: true
  config:
    autoVolume: true
    provider: azure
    driver: secrets-store.csi.k8s.io
    resourceGroup: rg-example
    subscriptionId: example-subscription-id
    tenantId: 6e06e42d-6925-47c6-b9e7-9581c7ca302a
    secretRef: secrets-store-creds-helm
    cloudName: AzurePublicCloud
    vaultName: kv-allianz-for-dev-ub79
  objects:
    - secretName: akssecret
      type: Opaque
      data:
        - name: session-secret
          key: SESSION_SECRET