# Define Application
app:
  replicas: 1
  image:
    registry: docker.io
    repository: nginx
    tag: latest
    pullPolicy: Always

service:
  ports:
    - name: #
      port: 80
      targetPort: 80
      protocol: TCP

# Environment Injection
ConfigMap:
  enabled: false
  data:
    - name: #
      value: #

# key Vault for public cloud provider
keyVault:
  enabled: false
  config:
    autoVolume: true
    provider: azure
    driver: secrets-store.csi.k8s.io
    resourceGroup: #
    subscriptionId: #
    tenantId: #
    secretRef: secrets-store-creds
    cloudName: AzurePublicCloud
    vaultName: #
  objects:
    - secretName: my-namespace-secret
      type: Opaque
      labels: #
      data:
        - name: dev-mysql_user
          key: mysql_user

# Dynamic volumes
volumeMounts:
  enabled: false
  volumes: #

# Ingress controller (Incoming Traffic from external)
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
  paths:
    - path: /
      backend:
        servicePort: 80
  http:
    domainName: #

# Deployment strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 25%

# Pod Resource
resources:
  limits:
    cpu: 150m
    memory: 300Mi
  requests:
    cpu: 50m
    memory: 150Mi